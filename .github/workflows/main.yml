name: Create Docker Container

on: [push]

jobs:
  main:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
        # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          
      # - name: List Files
      #   run: ls -l

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: setup DVC
        uses: iterative/setup-dvc@v1
        
      - name: fetch sklearn model sklearn pipeline pipeline features
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          dvc pull src/project/prod/prod_artifacts/feat_pipeline.pkl.dvc 
          dvc pull src/project/prod/prod_artifacts/feature_name.pkl.dvc 
          dvc pull src/project/prod/prod_artifacts/random_forest_model.pkl.dvc 

      - name: List Files
        run: ls -l src/project/prod/prod_artifacts

          
        # for use of aws features
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}


      
        # build the Docker container
      - name: Build container
        run: |
          docker build -t mlops:app-${{ github.run_number }} . --progress=plain --no-cache
     
      
      - name: Push2ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_DEFAULT_REGION }}

          image: mlops:app-${{ github.run_number }}
      

      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #       access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #       secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #       region: ${{ secrets.AWS_DEFAULT_REGION }}
      #       context: .
      #       push: true
      #       tags: singh/images:app-${{ github.run_number }}
      
      #update the deployment file so that Argocd can track changes in the deployment file
      
      # - name: modify the image
      #   run: |
      #     git config user.email $GIT_EMAIL
      #     git config user.name $GIT_NAME
      #     pwd
      #     cat k8_/deployment.yaml
      #     pwd
      #     sed -i "s+mlops:.*+mlops:app-$RUN_NUMBER+g" k8_/deployment.yaml
      #     cat k8_/deployment.yaml
      #     git add .
      #     git commit -m 'Done  by Github Actions   Job changemanifest: ${{ github.run_number }}'
      #     git push 
      #   env:
      #     GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
      #     GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
      #     RUN_NUMBER: ${{ github.run_number }}
      #     GIT_EMAIL : ${{ secrets.GIT_EMAIL }}
      #     GIT_NAME : ${{ secrets.GIT_NAME }}


  modifygit:
    needs: main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: changing the deployment of git repo
        with:
          repository: 'o-Senpai-o/MLOPs_workflow'
          token: ${{ secrets.GIT_PASSWORD }}
      - name: modify the image
          run: |
            git config user.email $GIT_EMAIL
            git config user.name $GIT_NAME
            pwd
            cat k8_/deployment.yaml
            pwd
            sed -i "s+mlops:.*+mlops:app-$RUN_NUMBER+g" k8_/deployment.yaml
            cat k8_/deployment.yaml
            git add .
            git commit -m 'Done  by Github Actions   Job changemanifest: ${{ github.run_number }}'
            git push 
          env:
            GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
            GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
            RUN_NUMBER: ${{ github.run_number }}
            GIT_EMAIL : ${{ secrets.GIT_EMAIL }}
            GIT_NAME : ${{ secrets.GIT_NAME }}