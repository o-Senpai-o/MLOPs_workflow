name: Create Docker Container

on: [push]

permissions:
    id-token: write # This is required for requesting the JWT
    contents: read  # This is required for actions/checkout

jobs:
  mlops-container:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
      
    steps:
        # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          
      - name: List Files
        run: ls -l

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # replaced with OIDC process no need to store secrets in github actions
          role-to-assume: arn:aws:iam::579989520040:role/github_actions  
          aws-region: eu-north-1
      
      - name: Install DVC
        run: pip install dvc[s3]
        
      - name: fetch sklearn_model sklearn_pipeline pipeline_features
        run: |
          dvc pull src/project/prod/prod_artifacts/feat_pipeline.pkl.dvc 
          dvc pull src/project/prod/prod_artifacts/feature_name.pkl.dvc 
          dvc pull src/project/prod/prod_artifacts/random_forest_model.pkl.dvc 

      - name: List Files
        run: ls -l src/project/prod/prod_artifacts


      - name: Build and push
        uses: docker/build-push-action@v5
        with:
            context: .
            push: true
            tags: singh/images:app-${{ github.run_number }}
      
      #update the deployment file so that Argocd can track changes in the deployment file
      
      - name: modify the deployment file
        run: |
          git config user.email $GIT_EMAIL
          git config user.name $GIT_NAME
          pwd
          cat k8_/deployment.yaml
          pwd
          sed -i "s+singh/images.*+singh/images:app-$RUN_NUMBER+g" deployment.yaml
          cat deployment.yaml
          git add .
          git commit -m 'Done  by Github Actions  Job change manifest: ${{ github.run_number }}'
          git push origin main
        env:
          GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
          RUN_NUMBER: ${{ github.run_number }}
          GIT_EMAIL : ${{ secrets.GIT_EMAIL }}
          GIT_NAME : ${{ secrets.GIT_NAME }}